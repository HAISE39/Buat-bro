if not gg then os.exit() end
gg.setVisible(false)
gg.alert("‚ö° Basic Attack Speed & Bypass ‚ö°")

-- ambil base address libil2cpp.so
local base = gg.getRangesList("libil2cpp.so")[1].start

-- 1) Offset method GetDisableRunForNormalAttack (boolean)
local offset_disable_run = 0x2AAF8AC
local addr_disable_run = base + offset_disable_run

-- patch ARM Thumb (return false ‚Üí MOV R0, #0; BX LR = 00 20 70 47)
local patch_disable_run = {
  {address = addr_disable_run, flags = gg.TYPE_BYTE, value = "00 20 70 47"}
}
gg.setValues(patch_disable_run)
gg.toast("‚úÖ DisableRunForNormalAttack patched ke FALSE")

-- 2) Offset multiplier attack speed (contoh RVA, harus disesuaikan dump asli)
local offset_attack_speed = 0x2AB1234
local addr_attack_speed = base + offset_attack_speed

-- input custom speed
local input = gg.prompt(
  {"Masukkan nilai kecepatan basic attack (default 10.0):"},
  {10},
  {"number"}
)

if input ~= nil then
  local patch_speed = {
    {address = addr_attack_speed, flags = gg.TYPE_FLOAT, value = input[1]}
  }
  gg.setValues(patch_speed)
  gg.toast("‚ö° Attack Speed di-set ke "..input[1])
else
  gg.toast("‚ùå User batal")
end

-- restore function
function restore()
  gg.setValues({{address = addr_disable_run, flags = gg.TYPE_BYTE, value = "?? ?? ?? ??"}}) -- isi original instruksi
  gg.setValues({{address = addr_attack_speed, flags = gg.TYPE_FLOAT, value = 1.0}})
  gg.toast("üîÑ Dikembalikan ke normal")
end
